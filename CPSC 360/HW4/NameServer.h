/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _NAMESERVER_H_RPCGEN
#define _NAMESERVER_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct register_operand {
	char *name;
	char *hostname;
};
typedef struct register_operand register_operand;

#define NAMESERVER 55555555
#define SIMP_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define registerServer 1
extern  int * registerserver_1(register_operand *, CLIENT *);
extern  int * registerserver_1_svc(register_operand *, struct svc_req *);
#define removeServer 2
extern  int * removeserver_1(char **, CLIENT *);
extern  int * removeserver_1_svc(char **, struct svc_req *);
#define getServerHostName 3
extern  char ** getserverhostname_1(char **, CLIENT *);
extern  char ** getserverhostname_1_svc(char **, struct svc_req *);
extern int nameserver_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define registerServer 1
extern  int * registerserver_1();
extern  int * registerserver_1_svc();
#define removeServer 2
extern  int * removeserver_1();
extern  int * removeserver_1_svc();
#define getServerHostName 3
extern  char ** getserverhostname_1();
extern  char ** getserverhostname_1_svc();
extern int nameserver_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_register_operand (XDR *, register_operand*);

#else /* K&R C */
extern bool_t xdr_register_operand ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_NAMESERVER_H_RPCGEN */
